## This is the Project V3 README

Introduction
As part of this project we will be implementing and analyzing the
Vignere Cipher.  The goal of the project is look at ways in which
we we crack the vignere cipher using index of coincidnce and
and possibly the Kasiski method.  We will also look at way to
implement in hardward...  Enigma anyone?

Project Goals & Objectives can be found here:
https://docs.google.com/document/d/1AgO5iTAE2NiLY1tLUcO8jlWrZI9_yyGFiPnvy1PO2YU

Steps to Project implementation
-------------------------------

0. Input bounding.
- Only consider to upper() for the 1st phase.
- Limited to [A..Z].. convert numeric to a string representation (0 to 9th)

1. How we are going to test it?
- 10 pages from ________ ( Scientific American Novel);

2. Helper functions:
- Generate random strings for keys (of different lengths)
- We need a 2-D plotting function (list_x_of_26_chars, list_y_of_freq)
- encode function
- decode function
- generic print function ( takes a string and prints)

3. Encrypt/Decrypt modules
- Test vectors for testing just the encrypt and decrypt function.

4. Key size determinination
- Kasiski determination .. [groups of strings]
- Index of Coincidence .. // Go with this approachâ€¦
- Test vectors.

5. Brute Force the Key // You guess the key.
// Input is cipher-text + Free-Analysis-for-10-pages+key-size(optional)
- Case-1: Keysize is known.
- Case-2: Keysize is unknown.

6. Analysis
- How long does it take to brute-force different key sizes.
- How long does it take if the keys are totally random v. generated by humans?
